{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["calculateSectionPositions = ()->\n  @maxTop = $('section.max').position().top\n  @convergervatop = $('section.convergerva').position().top\n  @allthingsopentop = $('section.allthingsopen').position().top\n  @transitionPadding = 0.25 * $(window).height()\n\nupdatePositionMobile = ()=>\n  output = 'top'\n  y = (@pageScroll.y * -1) + @transitionPadding\n  if y < @maxTop\n    output = 'top'\n  else if y >= @maxTop && y <= @convergervatop\n    output = 'max'\n  else if y >= @convergervatop && y <= @allthingsopentop\n    output = 'convergerva'\n  else if y >= @allthingsopentop\n    output = 'allthingsopen'\n  if !$('body').hasClass(output)\n    $('body').removeClass()\n    $('body').addClass output\nupdatePosition = ()=>\n  output = 'top'\n  y = $(window).scrollTop() + @transitionPadding\n  if y < @maxTop\n    output = 'top'\n  else if y >= @maxTop && y <= @convergervatop\n    output = 'max'\n    if !@maxOpen\n      g = @max.select('g')\n      console.log @maxmap.select '#prem'\n      prem = @maxmap.select '#prem'\n      prea = @maxmap.select '#prea'\n      prex = @maxmap.select '#prex'\n      state = @maxmap.select '#state'\n      @maxmap.append state\n      postm = @maxmap.select('#postm').attr('d')\n      posta = @maxmap.select('#posta').attr('d')\n      postx = @maxmap.select(\"#postx\").attr('d')\n      g.append(prem)\n      g.append(prea)\n      g.append(prex)\n      state.remove()\n      prem.animate {d: postm}, 1000, mina.elastic\n      prea.animate {d: posta}, 1000, mina.elastic\n      prex.animate {d: postx}, 1000, mina.elastic\n      @maxOpen = true\n  else if y >= @convergervatop && y <= @allthingsopentop\n    output = 'convergerva'\n  else if y >= @allthingsopentop\n    output = 'allthingsopen'\n  if !$('body').hasClass(output)\n    $('body').removeClass()\n    $('body').addClass output\n$ ->\n  @maxOpen = false\n  @convergervaOpen = false\n  @allthingsopenOpen = false\n  @md = new MobileDetect(window.navigator.userAgent)\n  if @md.mobile()\n    $('#wrapper').addClass('mobile')\n    $('#scroller').addClass('mobile')\n    @pageScroll = new IScroll '#wrapper', { click: true, probeType: 3, mouseWheel: true }\n    @pageScroll.on 'scroll', updatePositionMobile\n    @pageScroll.on 'scrollEnd', updatePositionMobile\n    document.addEventListener \"touchmove\", ((e) ->\n      e.preventDefault()\n      return\n    ), false\n  else\n      window.onscroll = updatePosition\n  calculateSectionPositions()\n  window.onresize = ()->\n    calculateSectionPositions()\n  @maps = $('.bottom svg')\n  setTimeout ( =>\n    for map in @maps\n      map = Snap map\n      path = map.select('*')\n      smallScale = new Snap.Matrix()\n      smallScale.scale(0.8,0.8, path.getBBox().cx, path.getBBox().cy)\n      path.animate {transform: smallScale}, 2000, mina.elastic\n  ),1000\n  for map in @maps\n    map = Snap map\n    map.hover ((e)->\n      s = Snap e.target\n      p = s.select('path')\n      midScale = new Snap.Matrix()\n      midScale.scale(0.9, 0.9, p.getBBox().cx, p.getBBox().cy)\n      p.animate {\n        transform: midScale\n      }, 2000, mina.elastic\n    ), ((e)->\n      s = Snap e.target\n      p = s.select('path')\n      midScale = new Snap.Matrix()\n      midScale.scale(0.8, 0.8, p.getBBox().cx, p.getBBox().cy)\n      p.animate {\n        transform: midScale\n      }, 2000, mina.elastic\n    )\n  @max = Snap \"#max\"\n  g = @max.group()\n  @maxmap = Snap.load \"../img/max_map.svg\", (f) ->\n    @maxmap = f\n    prem = f.select '#prem'\n    prea = f.select '#prea'\n    prex = f.select '#prex'\n    state = f.select '#state'\n    g.append state\n    postm = f.select('#postm').attr('d')\n    posta = f.select('#posta').attr('d')\n    postx = f.select(\"#postx\").attr('d')\n    max.click ->\n      g.append(prem)\n      g.append(prea)\n      g.append(prex)\n      state.remove()\n      prem.animate {d: postm}, 1000, mina.elastic\n      prea.animate {d: posta}, 1000, mina.elastic\n      prex.animate {d: postx}, 1000, mina.elastic\n"]}