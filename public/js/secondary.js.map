{"version":3,"file":"secondary.js","names":[],"mappings":"","sources":["secondary.coffee"],"sourcesContent":["calculateSectionPositions = ()->\n  @maxTop = $('section.max').position().top\n  @convergervatop = $('section.convergerva').position().top\n  @allthingsopentop = $('section.allthingsopen').position().top\n  @transitionPadding = 0.25 * $(window).height()\n\nupdatePositionMobile = ()=>\n  output = 'top'\n  y = (@pageScroll.y * -1) + @transitionPadding\n  if y < @maxTop\n    output = 'top'\n  else if y >= @maxTop && y <= @convergervatop\n    output = 'max'\n  else if y >= @convergervatop && y <= @allthingsopentop\n    output = 'convergerva'\n  else if y >= @allthingsopentop\n    output = 'allthingsopen'\n  if !$('body').hasClass(output)\n    $('body').removeClass()\n    $('body').addClass output\nupdatePosition = ()=>\n  output = 'top'\n  y = $(window).scrollTop() + @transitionPadding\n  if y < @maxTop\n    output = 'top'\n  else if y >= @maxTop && y <= @convergervatop\n    output = 'max'\n    if !@maxOpen\n      g = @max.select('g')\n      console.log @maxmap.select '#prem'\n      prem = @maxmap.select '#prem'\n      prea = @maxmap.select '#prea'\n      prex = @maxmap.select '#prex'\n      state = @maxmap.select '#state'\n      @maxmap.append state\n      postm = @maxmap.select('#postm').attr('d')\n      posta = @maxmap.select('#posta').attr('d')\n      postx = @maxmap.select(\"#postx\").attr('d')\n      g.append(prem)\n      g.append(prea)\n      g.append(prex)\n      state.remove()\n      prem.animate {d: postm}, 1000, mina.elastic\n      prea.animate {d: posta}, 1000, mina.elastic\n      prex.animate {d: postx}, 1000, mina.elastic\n      @maxOpen = true\n  else if y >= @convergervatop && y <= @allthingsopentop\n    output = 'convergerva'\n  else if y >= @allthingsopentop\n    output = 'allthingsopen'\n  if !$('body').hasClass(output)\n    $('body').removeClass()\n    $('body').addClass output\n$ ->\n  @maxOpen = false\n  @convergervaOpen = false\n  @allthingsopenOpen = false\n  @md = new MobileDetect(window.navigator.userAgent)\n  if @md.mobile()\n    $('#wrapper').addClass('mobile')\n    $('#scroller').addClass('mobile')\n    @pageScroll = new IScroll '#wrapper', { click: true, probeType: 3, mouseWheel: true }\n    @pageScroll.on 'scroll', updatePositionMobile\n    @pageScroll.on 'scrollEnd', updatePositionMobile\n    document.addEventListener \"touchmove\", ((e) ->\n      e.preventDefault()\n      return\n    ), false\n  else\n      window.onscroll = updatePosition\n  calculateSectionPositions()\n  window.onresize = ()->\n    calculateSectionPositions()\n  @maps = $('.bottom svg')\n  setTimeout ( =>\n    for map in @maps\n      map = Snap map\n      path = map.select('*')\n      smallScale = new Snap.Matrix()\n      smallScale.scale(0.8,0.8, path.getBBox().cx, path.getBBox().cy)\n      path.animate {transform: smallScale}, 2000, mina.elastic\n  ),1000\n  for map in @maps\n    map = Snap map\n    map.hover ((e)->\n      s = Snap e.target\n      p = s.select('path')\n      midScale = new Snap.Matrix()\n      midScale.scale(0.9, 0.9, p.getBBox().cx, p.getBBox().cy)\n      p.animate {\n        transform: midScale\n      }, 2000, mina.elastic\n    ), ((e)->\n      s = Snap e.target\n      p = s.select('path')\n      midScale = new Snap.Matrix()\n      midScale.scale(0.8, 0.8, p.getBBox().cx, p.getBBox().cy)\n      p.animate {\n        transform: midScale\n      }, 2000, mina.elastic\n    )\n  @max = Snap \"#max\"\n  g = @max.group()\n  @maxmap = Snap.load \"../img/max_map.svg\", (f) ->\n    @maxmap = f\n    prem = f.select '#prem'\n    prea = f.select '#prea'\n    prex = f.select '#prex'\n    state = f.select '#state'\n    g.append state\n    postm = f.select('#postm').attr('d')\n    posta = f.select('#posta').attr('d')\n    postx = f.select(\"#postx\").attr('d')\n    max.click ->\n      g.append(prem)\n      g.append(prea)\n      g.append(prex)\n      state.remove()\n      prem.animate {d: postm}, 1000, mina.elastic\n      prea.animate {d: posta}, 1000, mina.elastic\n      prex.animate {d: postx}, 1000, mina.elastic\n"],"sourceRoot":"/source/"}